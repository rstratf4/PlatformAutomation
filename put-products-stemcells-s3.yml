resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: daily
  type: time
  source:
    interval: 24h

- name: config
  type: git
  source:
    private_key: ((pcf-automation-ssh-key_private_key))
    uri: ((configuration_uri))
    branch: master
    submodules: all
    depth: 1

- name: splunk-product
  type: s3
  source:
    access_key_id: ((s3_access_key_id))
    bucket: ((s3_bucket))
    region_name: ((s3_region_name))
    secret_access_key: ((s3_secret_access_key))
    regexp: splunk-nozzle-(.*).pivotal

- name: splunk-stemcell
  type: s3
  source:
    access_key_id: ((s3_access_key_id))
    bucket: ((s3_bucket))
    region_name: ((s3_region_name))
    secret_access_key: ((s3_secret_access_key))
    regexp: bosh-stemcell-(.*)-vsphere.*\.tgz

- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: 2\.(.*)
    sort_by: semver

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((s3_access_key_id))
    bucket: ((s3_bucket))
    region_name: ((s3_region_name))
    secret_access_key: ((s3_secret_access_key))
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((s3_access_key_id))
    bucket: ((s3_bucket))
    region_name: ((s3_region_name))
    secret_access_key: ((s3_secret_access_key))
    regexp: platform-automation-image-(.*).tgz

jobs:
- name: fetch-splunk
  plan:
  - in_parallel:
    - get: daily
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca.certificate))
      PREFIX: '/concourse/main'
      INTERPOLATION_PATH: "download-product-configs"
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-splunk-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product-configs/splunk.yml
    output_mapping: {downloaded-stemcell: splunk-stemcell}
  - task: pivnet-rename
    image: platform-automation-image
    config: 
      platform: linux
      inputs: 
        - name: downloaded-product
        - name: splunk-stemcell
      outputs:
        - name: product-rename
        - name: stemcell-rename
      run:
        path: /bin/bash
        args:
          - -c 
          - >
            pushd downloaded-product &&
            mv "$(ls -1|head -n 1)" "$(ls -1|head -n 1|sed -e s/
            
  - in_parallel:
    - put: splunk-product
      params:
        file: downloaded-product/*.pivotal
    - put: splunk-stemcell
      params:
        file: splunk-stemcell/*.tgz

- name: fetch-platform-automation
  # We use the pivnet resource to bootstrap the pipeline,
  # and because this product is part of the pipeline, not the foundation
  plan:
  - get: platform-automation-pivnet
    trigger: true
  - in_parallel:
    - put: platform-automation-tasks
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image
      params:
        file: platform-automation-pivnet/*image*.tgz
