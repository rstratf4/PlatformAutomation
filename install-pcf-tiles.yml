resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: platform-automation-tasks
  type: pivnet
  source:
    api_token: ((pivnet_api_token))
    product_slug: ((platform_automation_slug))
    product_version: ((platform_automation_version))

- name: platform-automation-image
  type: pivnet
  source:
    api_token: ((pivnet_api_token))
    product_slug: ((platform_automation_slug))
    product_version: ((platform_automation_version))

# Pivotal Metrics Resources
- name: pivotal-metrics
  type: pivnet
  source:
    api_token: ((pivnet_api_token))
    product_slug: apm
    product_version: ((pivotal_metrics_version))
    sort_by: semver

- name: pivotal-metrics-stemcell
  type: pivnet
  source:
    api_token: ((pivnet_api_token))
    product_slug: stemcells-ubuntu-xenial
    product_version: ((pivotal_metrics_stemcell_version))
    sort_by: semver

jobs:
### { pivotal-metrics
- name: configure-pivotal-metrics
  plan:
  - aggregate:
    - get: platform-automation-tasks
      params:
        unpack: true
        globs: ["platform-automation-tasks-*.zip"]
    - get: platform-automation-image
      params:
        unpack: true
        globs: ["platform-automation-image-*.tgz"]
    - get: pivotal-metrics
      params:
        globs: ["apm-*.pivotal"]
    - get: pivotal-metrics-stemcell
      params:
        globs: ["*azure*.tgz"]

  - task: generate-configs
    image: platform-automation-image
    params:
      ENV_CONFIG: ((env_config))
      PIVOTAL_METRICS_CONFIG: ((pivotal_metrics_config))
    config:
      outputs:
        - name: env
        - name: config
      platform: linux

      run:
        path: bash
        args:
        - "-c"
        - |
          set -eux
          bosh interpolate <(echo "${ENV_CONFIG}") > env/env.yml
          bosh interpolate <(echo "${PIVOTAL_METRICS_CONFIG}") > config/pivotal_metrics_config.yml

  - task: upload-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      stemcell: pivotal-metrics-stemcell

  - task: upload-and-stage-tile
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-and-stage-product.yml
    input_mapping:
      product: pivotal-metrics

  - task: configure-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    params:
      CONFIG_FILE: pivotal_metrics_config.yml
### pivotal-metrics }
